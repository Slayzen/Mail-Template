{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\necat\\\\WorkSpace\\\\project\\\\src\\\\components\\\\template\\\\TemplateEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchSingleStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\nimport _ from \"lodash\";\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = fromValues => {\n      this.props.editStream(this.props.match.params.id, fromValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchSingleStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Loading..\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Edit A Stream\"), React.createElement(StreamForm //lodash ile objeden pair cekme\n    , {\n      initialValues: _.pick(this.props.stream, \"title\", \"description\")\n      /*initialValues={{\r\n        title: this.props.stream.title,\r\n        description: this.props.stream.description\r\n      }} // fieldların icindeki value lara yerlesicekler nameprop u sayesinde\r\n      */\n      ,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const idOfStream = ownProps.match.params.id; // üzerinde islem yapılıcak olan streamin id si\n\n  return {\n    stream: state.streams[idOfStream]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSingleStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\Users\\necat\\WorkSpace\\project\\src\\components\\template\\TemplateEdit.js"],"names":["React","connect","fetchSingleStream","editStream","StreamForm","_","StreamEdit","Component","onSubmit","fromValues","props","match","params","id","componentDidMount","render","stream","pick","mapStateToProps","state","ownProps","idOfStream","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,eAA9C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK3BC,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACD,KAPsC;AAAA;;AACvCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWR,iBAAX,CAA6B,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAArD;AACD;;AAKDE,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,UAAD,CACE;AADF;AAEE,MAAA,aAAa,EAAEX,CAAC,CAACY,IAAF,CAAO,KAAKP,KAAL,CAAWM,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC;AACf;;;;;AAHF;AAQE,MAAA,QAAQ,EAAE,KAAKR,QARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAeD;;AA3BsC;;AA6BzC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,UAAU,GAAGD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAAzC,CAD2C,CACE;;AAC7C,SAAO;AAAEG,IAAAA,MAAM,EAAEG,KAAK,CAACG,OAAN,CAAcD,UAAd;AAAV,GAAP;AACD,CAHD;;AAIA,eAAepB,OAAO,CACpBiB,eADoB,EAEpB;AAAEhB,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAFoB,CAAP,CAGbG,UAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchSingleStream, editStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\nimport _ from \"lodash\";\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchSingleStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (fromValues) => {\r\n    this.props.editStream(this.props.match.params.id, fromValues);\r\n  };\r\n  render() {\r\n    if (!this.props.stream) {\r\n      return <div>Loading..</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <h3>Edit A Stream</h3>\r\n        <StreamForm\r\n          //lodash ile objeden pair cekme\r\n          initialValues={_.pick(this.props.stream, \"title\", \"description\")}\r\n          /*initialValues={{\r\n            title: this.props.stream.title,\r\n            description: this.props.stream.description\r\n          }} // fieldların icindeki value lara yerlesicekler nameprop u sayesinde\r\n          */\r\n          onSubmit={this.onSubmit}\r\n        ></StreamForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const idOfStream = ownProps.match.params.id; // üzerinde islem yapılıcak olan streamin id si\r\n  return { stream: state.streams[idOfStream] };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchSingleStream, editStream }\r\n)(StreamEdit);\r\n"]},"metadata":{},"sourceType":"module"}