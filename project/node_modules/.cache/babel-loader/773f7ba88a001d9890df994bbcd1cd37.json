{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\necat\\\\WorkSpace\\\\project\\\\src\\\\components\\\\template\\\\TemplateEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; //import { fetchSingleStream, editStream } from \"../../actions\";\n\nimport _ from \"lodash\";\n\nclass TemplateEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = fromValues => {//this.props.editStream(this.props.match.params.id, fromValues);\n    };\n  }\n\n  componentDidMount() {//this.props.fetchSingleStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Loading..\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Edit A Stream\"), React.createElement(StreamForm //lodash ile objeden pair cekme\n    , {\n      initialValues: _.pick(this.props.stream, \"title\", \"description\")\n      /*initialValues={{\r\n        title: this.props.stream.title,\r\n        description: this.props.stream.description\r\n      }} // fieldların icindeki value lara yerlesicekler nameprop u sayesinde\r\n      */\n      ,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const idOfStream = ownProps.match.params.id; // üzerinde islem yapılıcak olan streamin id si\n\n  return {\n    stream: state.streams[idOfStream]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSingleStream,\n  editStream\n})(TemplateEdit);","map":{"version":3,"sources":["C:\\Users\\necat\\WorkSpace\\project\\src\\components\\template\\TemplateEdit.js"],"names":["React","connect","_","TemplateEdit","Component","onSubmit","fromValues","componentDidMount","render","props","stream","pick","mapStateToProps","state","ownProps","idOfStream","match","params","id","streams","fetchSingleStream","editStream"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAKzCC,QALyC,GAK7BC,UAAD,IAAgB,CACzB;AACD,KAPwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAKDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,UAAD,CACE;AADF;AAEE,MAAA,aAAa,EAAER,CAAC,CAACS,IAAF,CAAO,KAAKF,KAAL,CAAWC,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC;AACf;;;;;AAHF;AAQE,MAAA,QAAQ,EAAE,KAAKL,QARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAeD;;AA3BwC;;AA6B3C,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,UAAU,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,EAAzC,CAD2C,CACE;;AAC7C,SAAO;AAAER,IAAAA,MAAM,EAAEG,KAAK,CAACM,OAAN,CAAcJ,UAAd;AAAV,GAAP;AACD,CAHD;;AAIA,eAAed,OAAO,CACpBW,eADoB,EAEpB;AAAEQ,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAFoB,CAAP,CAGblB,YAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import { fetchSingleStream, editStream } from \"../../actions\";\r\nimport _ from \"lodash\";\r\nclass TemplateEdit extends React.Component {\r\n  componentDidMount() {\r\n    //this.props.fetchSingleStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (fromValues) => {\r\n    //this.props.editStream(this.props.match.params.id, fromValues);\r\n  };\r\n  render() {\r\n    if (!this.props.stream) {\r\n      return <div>Loading..</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <h3>Edit A Stream</h3>\r\n        <StreamForm\r\n          //lodash ile objeden pair cekme\r\n          initialValues={_.pick(this.props.stream, \"title\", \"description\")}\r\n          /*initialValues={{\r\n            title: this.props.stream.title,\r\n            description: this.props.stream.description\r\n          }} // fieldların icindeki value lara yerlesicekler nameprop u sayesinde\r\n          */\r\n          onSubmit={this.onSubmit}\r\n        ></StreamForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const idOfStream = ownProps.match.params.id; // üzerinde islem yapılıcak olan streamin id si\r\n  return { stream: state.streams[idOfStream] };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchSingleStream, editStream }\r\n)(TemplateEdit);\r\n"]},"metadata":{},"sourceType":"module"}