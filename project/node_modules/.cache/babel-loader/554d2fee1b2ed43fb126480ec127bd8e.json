{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\necat\\\\WorkSpace\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from \"lodash\";\nimport { CREATE_TEMPLATE, FETCH_SINGLE_TEMPLATE, FETCH_ALL_TEMPLATES, USE_TEMPLATE } from \"../actions/types\";\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case CREATE_TEMPLATE:\n      return _objectSpread({}, state, {\n        stateTemplate: action.payload\n      });\n\n    case FETCH_ALL_TEMPLATES:\n      return _objectSpread({}, state, {}, _.mapKeys(action.payload, \"_id\"));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\necat\\WorkSpace\\project\\src\\reducers\\templateReducer.js"],"names":["_","CREATE_TEMPLATE","FETCH_SINGLE_TEMPLATE","FETCH_ALL_TEMPLATES","USE_TEMPLATE","state","action","type","stateTemplate","payload","mapKeys"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,SACEC,eADF,EAEEC,qBAFF,EAGEC,mBAHF,EAIEC,YAJF,QAKO,kBALP;AAOA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAL;AACE,+BAAYI,KAAZ;AAAmBG,QAAAA,aAAa,EAAEF,MAAM,CAACG;AAAzC;;AACF,SAAKN,mBAAL;AACE,+BAAYE,KAAZ,MAAsBL,CAAC,CAACU,OAAF,CAAUJ,MAAM,CAACG,OAAjB,EAA0B,KAA1B,CAAtB;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATD","sourcesContent":["import _ from \"lodash\";\r\n\r\nimport {\r\n  CREATE_TEMPLATE,\r\n  FETCH_SINGLE_TEMPLATE,\r\n  FETCH_ALL_TEMPLATES,\r\n  USE_TEMPLATE\r\n} from \"../actions/types\";\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_TEMPLATE:\r\n      return { ...state, stateTemplate: action.payload };\r\n    case FETCH_ALL_TEMPLATES:\r\n      return { ...state, ..._.mapKeys(action.payload, \"_id\") };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}