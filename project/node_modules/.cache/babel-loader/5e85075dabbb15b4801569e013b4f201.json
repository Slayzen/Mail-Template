{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\necat\\\\WorkSpace\\\\project\\\\src\\\\components\\\\template\\\\TemplateMail.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\"; // field is component , reduxForm is connnect function that we used in redux\n\nimport { sendMail } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nimport { Link } from \"react-router-dom\";\n\nclass TemplateMail extends React.Component {\n  //buraya meta yı gönderdik\n  constructor(props) {\n    super(props);\n\n    this.renderInput = ({\n      input = {},\n      label,\n      meta,\n      placeholder\n    }) => {\n      const classNameError = \"field \".concat(meta.error && meta.touched ? \"error\" : \"\"); // field ı kırmızıya boyamak\n\n      return React.createElement(\"div\", {\n        className: classNameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"ui label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({\n        placeholder: placeholder\n      }, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), this.renderError(meta)); // input objesinin tamamını compenenetin icine esliyoruz example: onChange = fromPorps.input.onChange gibi\n    };\n\n    this.renderInputArea = ({\n      input,\n      label,\n      meta\n    }) => {\n      const classNameError = \"field \".concat(meta.error && meta.touched ? \"error\" : \"\"); // field ı kırmızıya boyamak\n\n      return React.createElement(\"div\", {\n        className: classNameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"ui label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, label), React.createElement(\"textarea\", Object.assign({}, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), this.renderError(meta)); // input objesinin tamamını compenenetin icine esliyoruz example: onChange = fromPorps.input.onChange gibi\n    };\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n      const mail = {\n        from: \"mailexample09@gmail.com\",\n        to: formValues.reciver,\n        subject: formValues.subject,\n        text: formValues.content\n      };\n      this.props.sendMail(mail);\n      history.push(\"/\"); //this.props.onSubmit(formValues);\n    };\n\n    this.state = {\n      a: null\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    //check error\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \" ui two column centered grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui piled raised   segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Send Mail\"), React.createElement(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"reciver\",\n      component: this.renderInput,\n      label: \"Reciver\",\n      placeholder: \"to : example@xxxx.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"subject\",\n      component: this.renderInput,\n      label: \"Subject\",\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"content\",\n      component: this.renderInputArea,\n      label: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"ui button red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Back\")))));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \" You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"mailForm\",\n  validate: validate\n})(TemplateMail);\nexport default connect(null, // mapStateToProp\n{\n  sendMail // action creater\n\n})(formWrapped);","map":{"version":3,"sources":["C:\\Users\\necat\\WorkSpace\\project\\src\\components\\template\\TemplateMail.js"],"names":["React","Field","reduxForm","sendMail","connect","history","Link","TemplateMail","Component","constructor","props","renderInput","input","label","meta","placeholder","classNameError","error","touched","renderError","renderInputArea","onSubmit","formValues","console","log","mail","from","to","reciver","subject","text","content","push","state","a","render","textAlign","handleSubmit","validate","errors","title","description","formWrapped","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\"; // field is component , reduxForm is connnect function that we used in redux\r\nimport { sendMail } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../../history\";\r\nimport { Link } from \"react-router-dom\";\r\nclass TemplateMail extends React.Component {\r\n  //buraya meta yı gönderdik\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { a: null };\r\n  }\r\n\r\n  renderError({ error, touched }) {\r\n    //check error\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  renderInput = ({ input = {}, label, meta, placeholder }) => {\r\n    const classNameError = `field ${meta.error && meta.touched ? \"error\" : \"\"}`; // field ı kırmızıya boyamak\r\n    return (\r\n      <div className={classNameError}>\r\n        <label className=\"ui label\">{label}</label>\r\n        <input placeholder={placeholder} {...input} autoComplete=\"off\" />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    ); // input objesinin tamamını compenenetin icine esliyoruz example: onChange = fromPorps.input.onChange gibi\r\n  };\r\n\r\n  renderInputArea = ({ input, label, meta }) => {\r\n    const classNameError = `field ${meta.error && meta.touched ? \"error\" : \"\"}`; // field ı kırmızıya boyamak\r\n    return (\r\n      <div className={classNameError}>\r\n        <label className=\"ui label\">{label}</label>\r\n\r\n        <textarea {...input}></textarea>\r\n        {this.renderError(meta)}\r\n      </div>\r\n    ); // input objesinin tamamını compenenetin icine esliyoruz example: onChange = fromPorps.input.onChange gibi\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    console.log(formValues);\r\n    const mail = {\r\n      from: \"mailexample09@gmail.com\",\r\n      to: formValues.reciver,\r\n      subject: formValues.subject,\r\n      text: formValues.content\r\n    };\r\n    this.props.sendMail(mail);\r\n    history.push(\"/\");\r\n    //this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\" ui two column centered grid\">\r\n        <div className=\"column\">\r\n          <div className=\"ui piled raised   segment\">\r\n            <h2 style={{ textAlign: \"center\" }}>Send Mail</h2>\r\n            <form\r\n              className=\"ui form error\"\r\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n            >\r\n              <Field\r\n                name=\"reciver\"\r\n                component={this.renderInput}\r\n                label=\"Reciver\"\r\n                placeholder=\"to : example@xxxx.com\"\r\n              />\r\n              <Field\r\n                name=\"subject\"\r\n                component={this.renderInput}\r\n                label=\"Subject\"\r\n                placeholder=\"Title\"\r\n              />\r\n\r\n              <Field\r\n                name=\"content\"\r\n                component={this.renderInputArea}\r\n                label=\"Content\"\r\n              />\r\n              <button className=\"ui button primary\">Submit</button>\r\n              <Link to=\"/\" className=\"ui button red\">\r\n                Back\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n  if (!formValues.title) {\r\n    errors.title = \" You must enter a title\";\r\n  }\r\n  if (!formValues.description) {\r\n    errors.description = \"You must enter a description\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst formWrapped = reduxForm({\r\n  form: \"mailForm\",\r\n  validate: validate\r\n})(TemplateMail);\r\n\r\nexport default connect(\r\n  null, // mapStateToProp\r\n  { sendMail } // action creater\r\n)(formWrapped);\r\n"]},"metadata":{},"sourceType":"module"}