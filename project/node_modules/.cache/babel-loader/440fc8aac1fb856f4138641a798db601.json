{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\necat\\\\WorkSpace\\\\project\\\\src\\\\components\\\\template\\\\TemplateEdit.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport TemplateForm from \"./TemplateForm\";\nimport { connect } from \"react-redux\";\nimport { fetchSingleTemplate, editTemplate } from \"../../actions\";\n\nclass TemplateEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = fromValues => {\n      this.props.editTemplate(this.props.match.params.id, fromValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchSingleTemplate(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.template) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Loading..\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Edit A Template\"), React.createElement(TemplateForm, {\n      initialValues: _.pick(this.props.template, \"subject\", \"context\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const idOfTemplate = ownProps.match.params.id;\n  return {\n    template: state.templates[idOfTemplate]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSingleTemplate,\n  editTemplate\n})(TemplateEdit);","map":{"version":3,"sources":["C:\\Users\\necat\\WorkSpace\\project\\src\\components\\template\\TemplateEdit.js"],"names":["React","_","TemplateForm","connect","fetchSingleTemplate","editTemplate","TemplateEdit","Component","onSubmit","fromValues","props","match","params","id","componentDidMount","render","template","pick","mapStateToProps","state","ownProps","idOfTemplate","templates"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,eAAlD;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAKzCC,QALyC,GAK7BC,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWL,YAAX,CAAwB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD,EAAoDJ,UAApD;AACD,KAPwC;AAAA;;AACzCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWN,mBAAX,CAA+B,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAvD;AACD;;AAKDE,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKL,KAAL,CAAWM,QAAhB,EAA0B;AACxB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,YAAD;AACE,MAAA,aAAa,EAAEf,CAAC,CAACgB,IAAF,CAAO,KAAKP,KAAL,CAAWM,QAAlB,EAA4B,SAA5B,EAAuC,SAAvC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAQD;;AApBwC;;AAsB3C,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,YAAY,GAAGD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAA3C;AACA,SAAO;AAAEG,IAAAA,QAAQ,EAAEG,KAAK,CAACG,SAAN,CAAgBD,YAAhB;AAAZ,GAAP;AACD,CAHD;;AAIA,eAAelB,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,CAFoB,CAAP,CAGbC,YAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport TemplateForm from \"./TemplateForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchSingleTemplate, editTemplate } from \"../../actions\";\r\n\r\nclass TemplateEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchSingleTemplate(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (fromValues) => {\r\n    this.props.editTemplate(this.props.match.params.id, fromValues);\r\n  };\r\n  render() {\r\n    if (!this.props.template) {\r\n      return <div>Loading..</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <h3>Edit A Template</h3>\r\n        <TemplateForm\r\n          initialValues={_.pick(this.props.template, \"subject\", \"context\")}\r\n        ></TemplateForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const idOfTemplate = ownProps.match.params.id;\r\n  return { template: state.templates[idOfTemplate] };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchSingleTemplate, editTemplate }\r\n)(TemplateEdit);\r\n"]},"metadata":{},"sourceType":"module"}